/* AUTO-GENERATED DO NOT EDIT */
#ifndef _COMPONENT_CONFIG_H_
#define _COMPONENT_CONFIG_H_
#include <stdint.h>
#include <stdbool.h>

/* Enum Mappings */
{% for component in components %}
    {% for arg in component.arguments %}
    {% if arg.type == "choice" %}
enum DeviceProfile_Choices_{{arg.component|title}}_{{arg.name|title}} {
    {% for choice in arg.options['choices'] %}
    DeviceProfile_Choices_{{arg.component|title}}_{{arg.name|title}}_{{choice|title}},
    {% endfor %}
    DeviceProfile_Choices_{{arg.component|title}}_{{arg.name|title}}_ChoiceCount
};
    {% endif %}
    {% endfor %}
{% endfor %}

/* Config structures */
{% for component in components %}
typedef struct DeviceProfile_{{component.normalised_name}}Config {
  {% for arg in component.arguments %}
    {% if arg.type == "choice" %}
    enum DeviceProfile_Choices_{{arg.component|title}}_{{arg.name|title}} {{arg.name}};
    {% elif arg.type in ("gpioPin", "gpioLevel", "i2cAddr") %}
    uint8_t {{arg.name}};
    {% elif arg.type == 'bool' %}
    bool {{arg.name}};
    {% elif arg.type in ("string", "id") %}
    char *{{arg.name}};
    {% elif arg.type == 'int' %}
    int32_t {{arg.name}};
    {% elif arg.type == 'uint' %}
    uint32_t {{arg.name}};
    {% elif arg.type == 'float' %}
    float {{arg.name}};
    {% endif %}
  {% endfor %}
} DeviceProfile_{{component.normalised_name}}Config_t;

{% endfor %}
typedef struct DeviceProfile_DeviceConfig {
{% for component in components %}
    DeviceProfile_{{component.normalised_name}}Config_t *{{component.normalised_field_name}}Config;
    uint32_t {{component.normalised_field_name}}Count;
{% endfor %}
} DeviceProfile_DeviceConfig_t;
#endif

